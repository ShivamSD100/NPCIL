@{
    Layout = "_LayoutWebPage";
}
@model NPCIL.Models.HomeModel

@{
    string fileType = GetFileType(Model.Menu.ImagePath);
    string fileurl = GetFileUrl(Model.Menu.ImagePath);
    System.Diagnostics.Debug.WriteLine($"fileType: {fileType}, fileurl: {fileurl}");
}

<div id="engMenu">
    @Html.Raw(Model.Menu.Content_MenuName_eng)
    @Html.Raw(fileurl)
    @Html.Raw(fileType)
    @Html.Raw(Model.Menu.ImagePath)

    <video width="640" height="480" controls>
        <source src="@Model.Menu.ImagePath" type="video/mp4">
        Your browser does not support the video tag.
    </video>
    @if (fileurl != "unknown")
    {
        if (fileType == "image")
        {
            <div>
                <img src="@fileurl" alt="@Model.Menu.MenuName_eng" />
                <br />
                <a href="@fileurl" download>Download Image</a>
                <button onclick="printImage('@fileurl')">Print Image</button>
            </div>
        }
        else if (fileType == "video")
        {
            <div>
                <video controls>
                    <source src="@fileurl" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
                <br />
                <a href="@fileurl" download>Download Video</a>
            </div>
        }
        else if (fileType == "pdf")
        {
            <div>
                <iframe src="@fileurl" style="width:100%; height:600px;" frameborder="0"></iframe>
                <br />
                <a href="@fileurl" download>Download PDF</a>
                <a href="javascript:void(0)" onclick="printPDF('@fileurl')">Print PDF</a>
            </div>
        }
        else if (fileType == "docx")
        {
            <div>
                <iframe src="https://view.officeapps.live.com/op/embed.aspx?src=@Uri.EscapeDataString(fileurl)" style="width:100%; height:600px;" frameborder="0"></iframe>
                <br />
                <a href="@fileurl" download>Download Document</a>
            </div>
        }
        else
        {
            <div>
                <iframe src="@fileurl" style="width:100%; height:600px;" frameborder="0"></iframe>
                <br />
                <a href="@fileurl" download>Download File</a>
            </div>
        }
    }
</div>

<div id="hndMenu">
    @Html.Raw(Model.Menu.Content_MenuName_hindi)

    @if (fileurl != "unknown")
    {
        if (fileType == "image")
        {
            <div>
                <img src="@fileurl" alt="@Model.Menu.MenuName_eng" />
                <br />
                <a href="@fileurl" download>Download Image</a>
                <button onclick="printImage('@fileurl')">Print Image</button>
            </div>
        }
        else if (fileType == "video")
        {
            <div>
                <video controls>
                    <source src="@fileurl" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
                <br />
                <a href="@fileurl" download>Download Video</a>
            </div>
        }
        else if (fileType == "pdf")
        {
            <div>
                <iframe src="@fileurl" style="width:100%; height:600px;" frameborder="0"></iframe>
                <br />
                <a href="@fileurl" download>Download PDF</a>
                <a href="javascript:void(0)" onclick="printPDF('@fileurl')">Print PDF</a>
            </div>
        }
        else if (fileType == "docx")
        {
            <div>
                <iframe src="https://view.officeapps.live.com/op/embed.aspx?src=@Uri.EscapeDataString(fileurl)" style="width:100%; height:600px;" frameborder="0"></iframe>
                <br />
                <a href="@fileurl" download>Download Document</a>
            </div>
        }
        else
        {
            <div>
                <iframe src="@fileurl" style="width:100%; height:600px;" frameborder="0"></iframe>
                <br />
                <a href="@fileurl" download>Download File</a>
            </div>
        }
    }
</div>

@functions {
    string GetFileType(string url)
    {
        if (string.IsNullOrEmpty(url))
        {
            return "unknown";
        }

        try
        {
            Uri uri = new Uri(url);
            string extension = System.IO.Path.GetExtension(uri.LocalPath);

            switch (extension.ToLower())
            {
                case ".jpg":
                case ".jpeg":
                case ".png":
                case ".gif":
                    return "image";
                case ".mp4":
                case ".avi":
                case ".mov":
                    return "video";
                case ".pdf":
                    return "pdf";
                case ".docx":
                    return "docx";
                default:
                    return "unknown";
            }
        }
        catch (UriFormatException)
        {
            return "unknown";
        }
    }

    string GetFileUrl(string url)
    {
        try
        {
            return Url.Content($"~/{url}");
        }
        catch (UriFormatException)
        {
            return "unknown";
        }
    }
}

<script>
    function printImage(src) {
        var printWindow = window.open(src, '_blank');
        printWindow.onload = function () {
            printWindow.print();
        };
    }

    function printPDF(src) {
        var printWindow = window.open(src, '_blank');
        printWindow.onload = function () {
            printWindow.print();
        };
    }
</script>
